#!/bin/sh

# Enable verbose output if VERBOSE=1 (see: ../Makefile.am )
[ "$VERBOSE" = "1" ] && set -x

set -e
#set -x

baseDir=$(dirname "$0")
. ${baseDir}/func.sh

#set

# autotools
#[ -f $abs_top_builddir/tests/config.sh ] && { . ${abs_top_builddir}/tests/config.sh; echo "Found test config autotools."; }
[ "x" != "x${CONFIG_SH}" -a -f ${CONFIG_SH} ] && {
    echo "Using config generated by autotools: '${CONFIG_SH}'";
    . ${CONFIG_SH};
}

# other cases
[ -f $baseDir/../config.sh ] && { echo "Using non-autotools config: $baseDir/../config.sh";
				  . ${baseDir}/../config.sh; }

. ${baseDir}/../config_default.sh

echo "Examples: $examplesBinDir"

#
# Test config
#
testName="unadf_win32"

#
# test_common.sh needs testName defined
#
. $baseDir/test_common.sh


#
# setup
#
setup() {
    unadf=$(get_test_cmd unadf)

    mkdir -vp tmp/$testName

    dumpName=win32-names.adf
    dumpFile=tmp/${testName}/${dumpName}
    #gzip -cd ${dumpsDir}/${dumpName}.gz > $dumpFile
    cat ${dumpsDir}/${dumpName} > $dumpFile
}

#
# teardown
#

#. ./teardown.sh
if [ "x$testName" = "x" ]
then
    echo "$0: test not configured"
    exit 1
fi

trap cleanup 0 1 2
cleanup() {
    # path beginning must be hardcoded(!)
    rm -rfv tmp/${testName}/*
    rm -d tmp/${testName}
}


#
# run tests
#
setup
. ${baseDir}/test_runner.sh
run_tests "${testName}"
